name: CI
on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

# Add security at the workflow level
permissions:
  contents: read

jobs:
  # Separate job for testing and linting (runs on PRs)
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      # Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies with audit and security checks
      - name: Install Dependencies
        run: |
          npm ci --audit
          npm audit --audit-level=high

      # Install client dependencies with audit and security checks
      - name: Install Client Dependencies
        run: |
          npm ci --prefix client --audit
          npm audit --prefix client --audit-level=high

      # Security: Check for known vulnerabilities
      - name: Security Audit
        run: |
          npm audit --prefix client --audit-level=high
          npm audit --audit-level=high

      # Run linting
      - name: Run Lint
        run: npx eslint .

      # Build the React app
      - name: Build React App
        run: npm run build

      # Run tests (pass if no tests)
      - name: Run Tests
        run: cd client && npm test -- --watchAll=false --passWithNoTests

  # Separate job for deployment (only runs on master push)
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      # Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies (deployment build)
      - name: Install Dependencies
        run: npm ci --audit

      # Install client dependencies (deployment build)
      - name: Install Client Dependencies
        run: npm ci --prefix client --audit

      # Build the React app for production
      - name: Build React App
        run: npm run build

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Upload Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./client/build

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
